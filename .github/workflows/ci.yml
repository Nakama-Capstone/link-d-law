name: CI

on:
  push:
    branches:
      - dev
      - dev/cc
      - dev/md
      - dev/ml
      # - '!main'
  pull_request:
    branches:
      - main
      - dev

jobs:
  api-lint:
    name: (api) Perform lint check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup bun
        uses: oven-sh/setup-bun@v1
      - name: install dependencies
        run: bun install
      - name: run tests
        run: bun test
      - name: lint
        run: bun lint

  apps-mobile-android-lint:
    name: (apps/mobile-android) Perform lint check
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./apps/mobile-android
    permissions:
      # Required to upload/save artifact, otherwise you'll get
      # "Error: Resource not accessible by integration"
      contents: write
      # Required to post comment, otherwise you'll get
      # "Error: Resource not accessible by integration"
      pull-requests: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
      - name: Make Gradle executable
        run: chmod +x ./gradlew
        working-directory: ./apps/mobile-android
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 'current'
      - name: Run lint
        run: ./gradlew lintDebug
        working-directory: ./apps/mobile-android
      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: apps/mobile-android/app/build/reports/lint-results-debug.html
      - name: Comment on PR if is PR with bot github actions show artifacts link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const artifact = artifacts.data.artifacts.find(artifact => artifact.name === 'lint.html');
            if (artifact) {
              const artifactLink = artifact.archive_download_url;
              const comment = `Lint report: ${artifactLink}`;
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  apps-mobile-android-debug-apk:
    name: (apps/mobile-android) Generate Debug APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 'current'
      - name: Make Gradle executable
        run: chmod +x ./gradlew
        working-directory: ./apps/mobile-android
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace
        working-directory: ./apps/mobile-android
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: com.nakama.capstone.linkdlaw-debug.apk
          path: apps/mobile-android/app/build/outputs/apk/debug/app-debug.apk
      - name: Comment on PR if is PR with bot github actions show artifacts link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            const artifact = artifacts.data.artifacts.find(artifact => artifact.name === 'lint.html');
            if (artifact) {
              const artifactLink = artifact.archive_download_url;
              const comment = `Lint report: ${artifactLink}`;
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }